@model IEnumerable<ReseauEntreprise.Areas.Admin.Models.ViewModels.Event.EmployeeSelectorForm>

@{
    ViewBag.Title = "SubscribeEmployees";
}

<h2>SubscribeEmployees</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal" style="width:50%;">
    <h4>EmployeeSelectorForm</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table class="table">
        <tr>
            <th>@Html.LabelFor(item => Model.FirstOrDefault().Employee, htmlAttributes: new { @class = "control-label col-md-3" })</th>
            <th>@Html.LabelFor(item => Model.FirstOrDefault().Selected, htmlAttributes: new { @class = "control-label col-md-1" })</th>
        </tr>

            @for (int i = 0; i < Model.Count(); ++i)
            {
        <tr>
            <td>
                @{ Html.RenderPartial("EmployeePartial", Model.ToList()[i].Employee); }
            </td>
            @Html.HiddenFor(modelItem => Model.ToList()[i].EventId, new { name = "Model[" + i + "].EventId" })
            @Html.HiddenFor(modelItem => Model.ToList()[i].EmployeeId, new { name = "Model[" + i + "].EmployeeId" })
            <td>
                <div class="checkbox">
                    @if (Model.ToList()[i].Selected)
                    {
                        @Html.CheckBoxFor(modelItem => Model.ToList()[i].Selected, new { id = Model.ToList()[i].Employee.Employee_Id, name = "Model[" + i + "].Selected" , disabled = "disabled" })
                    }
                    else
                    {
                        @Html.CheckBoxFor(modelItem => Model.ToList()[i].Selected, new { id = Model.ToList()[i].Employee.Employee_Id, name = "Model[" + i + "].Selected" })
                    }
                </div>
            </td>
        </tr>
            }

    </table>
        <div class="form-group">
            <div class="col-md-offset-2">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
