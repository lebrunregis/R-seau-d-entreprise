@model ReseauEntreprise.Areas.Employee.Models.ViewModels.Message.SendForm

@using (Html.BeginForm(
	                    Model      .ToProject .HasValue ? "SendProject"  :
						(
					      Model    .ToEmployee.HasValue ? "SendEmployee" :
						  (
					        Model  .ToTask    .HasValue ? "SendTask"     :
							(
					          Model.ToTeam    .HasValue ? "SendTeam"     : ""
							)
						  )
						),
					   "Message",
					   new
					   {
						   ProjectId  = Model.ToProject ,
						   EmployeeId = Model.ToEmployee,
						   TaskId     = Model.ToTask    ,
						   TeamId     = Model.ToTeam
					   },
					   FormMethod.Post, new { onsubmit = "sendmessage(event); return false;" })
		)
{
	@Html.AntiForgeryToken()

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<hr />

	<div>
		@Html.LabelFor(model => model.Message)
		<div>
			@Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "longtext" } })
			@Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="hidden">
		@Html.EditorFor(model => model.ReplyTo, new { htmlAttributes = new { @class = "ReplyTo" } })
	</div>
	<div>
		<input type="submit" value="Send" class="btn btn-default" />
		<button class="btn btn-default" type="button" style="display: none">Cancel</button>
	</div>
}
